.MExp File Management

Lbl LWOR {
    .Loads a world file into RAM, unarchiving it
    .Directly returns the load status (0 good, higher bad)

    .Unarchiving the loading the world file, and loading it
    UnArchive Str1FWORL
    GetCalc(Str1FWORL)->WF

    .Exiting if that failed
    !If WF
        1Return
    End

    .Getting pointers to files within world file
    {WF}^r+WF->IM
    {WF+2}^r+WF->ID
    {WF+4}^r+WF->HM
    {WF+6}^r+WF->OM
    {WF+8}^r+WF->ST

    .Getting map dimensions
    {IM}->MW
    {IM+1}->MH

    0Return
}

Lbl REAF {
    .Rearchive Files
    .Returns 0 if files could be rearchived, 1 if they could not

    .First correcting checksums of files within world file
    {IM-2}^r->G
    cumSum(IM,G)->{IM+G}^r
    cumSum(HM,G)->{HM+G}^r
    cumSum(OM,G)->{OM+G}^r
    {ID-2}^r->G
    cumSum(ID,G)->{ID+G}^r
    {ST-2}^r->G
    cumSum(ST,G)->{ST+G}^r

    .Then rearchiving world file
    Archive Str1FWORL->G

    If G
        0Return
    Else
    1Return
}

Lbl IDMU {
    .IDAT Max Utilization
    .Returns the total number of bytes in the IDAT appvar

    {ID-2}^rReturn
}

Lbl IDUT {
    .IDAT Utilization
    .Returns how many bytes of IDAT are occupied
    .   (judged by final byte of final entity of final island)
    {ID}->G       .num islands
    !If G
        2Return    .returning 2 if we have no islands
    End
    {G*2+ID}^r->G .ptr to final island

    .{G+ID} is number of entities on island
    .  as such we have {G+ID}*8 entity bytes, plus 8 more for island header
    .Adding that to the island base pointer relative to IDAT, stored in G,
    .  yields IDAT utilization.
    {G+ID}+1*8+GReturn
}

Lbl CFIL {
    .Create file
    .r1-r2: width, height
    .r3: size of IDAT in bytes
    .Returns whether or not the file could be successfully created

    .Deleting existing world file
    DelVar Str1FWORL

    .Putting map dimensions into variables
    r_1->MW
    r_2->MH

    .Getting file size for maps
    MW*MH+2->G

    .Attempting to load strs file to copy it into the world
    2->I
    GetCalc(Str1FSTRS,Y_1)->J
    If J
        .Successfully loaded strings file!
        {Y_1-2}^r->I
    End

    .Creating the new world file
    .(size = 3*map + 1*idat + IB for strings
    .   + (2B ptr + 2B size + 2B checksum) * 5 files)
    GetCalc(Str1FWORL,G*3+r_3+I+30)->WF

    .Making sure the file was successfully created
    !If WF
        1Return
    End

    .Getting and storing pointers to all virtual world files
    12->H->{WF}^r
    H+WF->IM
    H+G+4->H->{WF+2}^r
    H+WF->ID
    H+r_3+4->H->{WF+4}^r
    H+WF->HM
    H+G+4->H->{WF+6}^r
    H+WF->OM
    H+G+4->H->{WF+8}^r
    H+WF->ST

    .Putting sizes in virtual world files
    G->{IM-2}^r
    r_3->{ID-2}^r
    G->{HM-2}^r
    G->{OM-2}^r
    I->{ST-2}^r

    .Putting data in IDAT
    0->{ID}^r .IDAT just has 0 islands

    .Putting data in map files
    MW->{IM}->{HM}->{OM}
    MH->{IM+1}->{HM+1}->{OM+1}
    G--
    For(H,2,G)
        0->{IM+H}
        0->{HM+H}
        2->{OM+H}
    End

    .Putting data in strings file
    If J
        Copy(Y_1,ST,I)
    Else
        0->{ST}^r
    End

    0Return
}
