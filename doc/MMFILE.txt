.MExp File Management

Lbl LWOR {
    .Loads a world file into RAM, unarchiving it
    .Directly returns the load status (0 good, higher bad)

    .Unarchiving the loading the world files
    UnArchive Str1FIMAP
    UnArchive Str1FIDAT
    UnArchive Str1FHMAP
    UnArchive Str1FOMAP

    .Loading the world files
    GetCalc(Str1FIMAP)->IM
    GetCalc(Str1FIDAT)->ID
    GetCalc(Str1FHMAP)->HM
    GetCalc(Str1FOMAP)->OM

    .Exiting if that failed
    !If IM?ID?HM?OM
        1Return
    End

    .Getting map dimensions
    {IM}->MW
    {IM+1}->MH

    0Return
}

Lbl REAF {
    .Rearchive Files
    .Returns 0 if files could be rearchived, 1 if they could not

    Archive Str1FIMAP->G
    Archive Str1FIDAT->H
    Archive Str1FHMAP->I
    Archive Str1FOMAP->J

    If G?H?I?J
        0Return
    Else
    1Return
}

Lbl IDMU {
    .IDAT Max Utilization
    .Returns the total number of bytes in the IDAT appvar

    {ID-2}^rReturn
}

Lbl IDUT {
    .IDAT Utilization
    .Returns how many bytes of IDAT are occupied
    .   (judged by final byte of final entity of final island)
    {ID}->G       .num islands
    !If G
        2Return    .returning 2 if we have no islands
    End
    {G*2+ID}^r->G .ptr to final island

    .{G+ID} is number of entities on island
    .  as such we have {G+ID}*8 entity bytes, plus 8 more for island header
    .Adding that to the island base pointer relative to IDAT, stored in G,
    .  yields IDAT utilization.
    {G+ID}+1*8+GReturn
}

Lbl CFIL {
    .Create file
    .r1-r2: width, height
    .r3: size of IDAT in bytes
    .Returns whether or not the file could be successfully created

    .Deleting existing files
    DelVar Str1FIMAP
    DelVar Str1FIDAT
    DelVar Str1FHMAP
    DelVar Str1FOMAP

    .Getting file size for maps
    r_1*r_2+2->G

    .Creating all files
    GetCalc(Str1FIMAP,G)->IM
    GetCalc(Str1FIDAT,r_3)->ID
    GetCalc(Str1FHMAP,G)->HM
    GetCalc(Str1FOMAP,G)->OM

    .Making sure files were successfully created
    !If IM?ID?HM?OM
        1Return
    End

    .Putting data in IDAT
    0->{ID}^r .IDAT just has 0 islands

    .Putting data in map files
    r_1->{IM}->{HM}->{OM}
    r_2->{IM+1}->{HM+1}->{OM+1}
    G--
    For(H,2,G)
        0->{IM+H}
        0->{HM+H}
        2->{OM+H}
    End

    .Getting map dimensions
    r_1->MW
    r_2->MH

    0Return
}
